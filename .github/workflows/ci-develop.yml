name: Deploy Develop Branch
on:
  push:
    branches:
      - develop

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
      - name: Cache Yarn Dependencies
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Setup Node Version
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Install Firebase
        run: |
          yarn install
          yarn global add firebase-tools
      - name: Install Dependencies
        run: |
          cd ./functions
          yarn install
          cd ../
      - name: Build
        run: |
          cd ./functions
          tsc --build tsconfig.json
          cd ../
      - name: Archive Extension Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: latest-develop-artifact
          retention-days: 30
          path: |
            .extension-params.env
            extension.yaml
            firebase.json
            package.json
            POSTINSTALL.md
            PREINSTALL.md
            functions/src
            functions/__tests__
            functions/lib
            functions/tsconfig.json
            functions/package.json
            functions/yarn.lock
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: latest-develop-artifact
      - name: Cache Yarn Dependencies
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Setup Node Version
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Install Firebase
        run: |
          yarn install
          yarn global add firebase-tools
      - name: Install Dependencies
        run: |
          cd ./functions
          yarn install
          cd ../
      - name: Run tests with mocks
        run: |
          firebase emulators:exec --only firestore "cd ./functions && yarn test && cd ../"
        env:
          FIRESTORE_EMULATOR_HOST: "localhost:8080"
      - name: Archive Extension Coverage
        uses: actions/upload-artifact@v2
        with:
          name: latest-develop-coverage
          retention-days: 30
          path: |
            functions/coverage
  coverage:
    name: Upload Coverage
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Download Test Coverage Artifacts
        uses: actions/download-artifact@v2
        with:
          name: latest-develop-coverage
      - name: Archive Extension Coverage
        run: echo "Upload the extension's test coverage"
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: latest-develop-artifact
      - name: Cache Yarn Dependencies
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Setup Node Version
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Install Firebase
        run: |
          yarn install
          yarn global add firebase-tools
      - name: Install Expect
        run: sudo apt-get install expect
      - name: Install Dependencies
        run: |
          cd ./functions
          yarn install
          cd ../
      - name: Export Client Webhook Shared Secret to Extension Params File
        env:
          PURCHASELY_SHARED_SECRET: ${{ secrets.PURCHASELY_SHARED_SECRET }}
        run: |
          echo "PURCHASELY_SHARED_SECRET=$PURCHASELY_SHARED_SECRET" >> .extension-params.env
          cat .extension-params.env
      - name: Deploy to Purchasely's Firebase Project
        run: |
          echo "DEPLOYING THE FIREBASE EXTENSION TO PURCHASELY'S PROJECT"
          yarn run firebase ext:install ./ --params ./.extension-params.env --project $FIREBASE_PROJECT_ID --token $FIREBASE_TOKEN --non-interactive --force
          echo "DEPLOYED THE FIREBASE EXTENSION TO PURCHASELY'S PROJECT"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
